<?xml version="1.0" encoding="utf-8" ?>
<craftz:BasePage xmlns="http://xamarin.com/schemas/2014/forms"
                 xmlns:x="http://schemas.microsoft.com/winfx/2009/xaml"
                 x:Class="PROAtas.Mobile.Views.HomePage"
                 x:DataType="viewmodel:HomeViewModel"
                 x:TypeArguments="viewmodel:HomeViewModel"
                 x:Name="base"
                 
                 xmlns:ui="clr-namespace:PROAtas.Assets.UI"
                  
                 xmlns:ios="clr-namespace:Xamarin.Forms.PlatformConfiguration.iOSSpecific;assembly=Xamarin.Forms.Core"
                 xmlns:core="clr-namespace:PROAtas.Core"
                 xmlns:droid="clr-namespace:Xamarin.Forms.PlatformConfiguration.AndroidSpecific;assembly=Xamarin.Forms.Core"
                 xmlns:craftz="clr-namespace:Craftz.Views;assembly=Xamarin.Craftz"
                 xmlns:entity="clr-namespace:PROAtas.Core.Model.Entities;assembly=PROAtas.Core"
                 xmlns:controls="clr-namespace:PROAtas.Mobile.Controls"
                 xmlns:elements="clr-namespace:PROAtas.Mobile.ViewModel.Elements"
                 xmlns:viewmodel="clr-namespace:PROAtas.Mobile.ViewModel"
                 xmlns:behaviors="clr-namespace:Xamarin.Craftz.Behavior;assembly=Xamarin.Craftz"
                 xmlns:converters="clr-namespace:PROAtas.Converters"
                 
                 Title="Cosmo Atas">
    
    <ContentPage.BindingContext>
        <viewmodel:HomeViewModel />
    </ContentPage.BindingContext>
    
    <ContentPage.Resources>
        <!--Styles-->
        <Style x:Key="singleListCollection" TargetType="CollectionView">
            <Setter Property="SelectionMode" Value="None" />
            <Setter Property="ItemsLayout">
                <Setter.Value>
                    <LinearItemsLayout Orientation="Vertical"
                                       ItemSpacing="{StaticResource BaseSpacing}" />
                </Setter.Value>
            </Setter>
        </Style>

        <Style x:Key="minuteFrame" TargetType="Frame">
            <Setter Property="Padding" Value="{StaticResource BaseSpacing}" />
            <Setter Property="CornerRadius" Value="{StaticResource BaseCornerRadius}" />
        </Style>
        
        <!--Converters-->
        <converters:BooleanToColorConverter x:Key="SelectedMinuteColorConverter"
                                            TrueColor="{StaticResource Accent}"
                                            FalseColor="{StaticResource Divider}" />
        <converters:BooleanToColorConverter x:Key="SelectedFontColorConverter"
                                            TrueColor="{StaticResource TextIcons}"
                                            FalseColor="{StaticResource SecondaryText}" />

    </ContentPage.Resources>
    
    <ContentPage.Content>
        <Grid RowDefinitions="Auto, *, 60">
            <!--Search Bar-->
            <!--TODO: needs further development. This will be done on v15-->
            <!--<controls:LoadSearchBar Margin="5,5,5,0"
                                    TextColor="{StaticResource Primary}"
                                    Placeholder="Pesquisar..." />-->

            <!--Minute Collection-->
            <CollectionView Grid.Row="1" 
                            x:Name="minuteCollection" 
                            x:DataType="elements:MinuteElement"
                            Style="{StaticResource singleListCollection}"
                            ItemsSource="{Binding BindingContext.Minutes, Source={x:Reference minuteCollection}}">
                <CollectionView.ItemTemplate>
                    <DataTemplate>

                        <!--Minute Content-->
                        <ContentView Padding="5">

                            <!--Border-->
                            <Frame Style="{StaticResource minuteFrame}"
                                   BackgroundColor="{Binding IsSelected, Converter={StaticResource SelectedMinuteColorConverter}}">
                                <Frame.GestureRecognizers>
                                    <TapGestureRecognizer Command="{Binding BindingContext.SelectMinute, Source={x:Reference base}}"
                                                                  CommandParameter="{Binding .}" />
                                </Frame.GestureRecognizers>

                                <StackLayout Spacing="{StaticResource BaseSpacing}">

                                    <!--People on the meeting-->
                                    <StackLayout Orientation="Horizontal">
                                        <Label Style="{StaticResource starBorderFontIcon}" 
                                               HorizontalOptions="StartAndExpand"
                                               TextColor="{Binding IsSelected, Converter={StaticResource SelectedFontColorConverter}}" />

                                        <Label Style="{StaticResource bodyLabel}"
                                               Text="{Binding PeopleQuantity}"
                                               TextColor="{Binding IsSelected, Converter={StaticResource SelectedFontColorConverter}}" />

                                        <Label Style="{StaticResource groupsFontIcon}"
                                               TextColor="{Binding IsSelected, Converter={StaticResource SelectedFontColorConverter}}" />
                                    </StackLayout>

                                    <!--Name of the meeting-->
                                    <StackLayout Orientation="Horizontal">
                                        <Label Style="{StaticResource assignmentFontIcon}"
                                               TextColor="{Binding IsSelected, Converter={StaticResource SelectedFontColorConverter}}" />

                                        <Label Style="{StaticResource headerLabel}" 
                                               LineBreakMode="MiddleTruncation"
                                               Text="{Binding Name, Mode=OneTime}"
                                               TextColor="{Binding IsSelected, Converter={StaticResource SelectedFontColorConverter}}" />
                                    </StackLayout>

                                    <!--Date of the meeting-->
                                    <StackLayout Orientation="Horizontal">
                                        <Label Style="{StaticResource todayFontIcon}"
                                               TextColor="{Binding IsSelected, Converter={StaticResource SelectedFontColorConverter}}" />

                                        <Label Style="{StaticResource bodyLabel}" 
                                               FontSize="14"
                                               LineBreakMode="HeadTruncation" 
                                               Text="{Binding Date, Mode=OneTime, StringFormat={StaticResource DateFormat}}"
                                               TextColor="{Binding IsSelected, Converter={StaticResource SelectedFontColorConverter}}" />
                                    </StackLayout>

                                </StackLayout>

                            </Frame>

                        </ContentView>

                    </DataTemplate>
                </CollectionView.ItemTemplate>
                <CollectionView.Footer>
                    <BoxView HeightRequest="160" />
                </CollectionView.Footer>
            </CollectionView>

            <!--Bottom Gradient-->
            <BoxView Grid.Row="1"
                     VerticalOptions="End"
                     InputTransparent="True">
                <BoxView.Background>
                    <LinearGradientBrush StartPoint="0,0"
                                             EndPoint="0,1">
                        <GradientStop Color="Transparent"
                                          Offset="0" />
                        <GradientStop Color="White"
                                          Offset="0.2" />
                    </LinearGradientBrush>
                </BoxView.Background>
            </BoxView>

            <!--Left button list-->
            <StackLayout Grid.Row="1"
                         Opacity="0" TranslationX="-100" 
                         HorizontalOptions="Start" VerticalOptions="End"
                         InputTransparent="True"
                         CascadeInputTransparent="False"
                         Padding="5">
                <StackLayout.Behaviors>
                    <behaviors:FadingBehavior IsActive="{Binding HasMinuteSelected}">
                        <x:Arguments>
                            <x:Double>1</x:Double>
                        </x:Arguments>
                    </behaviors:FadingBehavior>
                    <behaviors:MovingBehavior IsActive="{Binding HasMinuteSelected}">
                        <x:Arguments>
                            <x:Double>-100</x:Double>
                            <x:Double>0</x:Double>
                        </x:Arguments>
                    </behaviors:MovingBehavior>
                </StackLayout.Behaviors>

                <Button Style="{StaticResource roundButton}"
                        BackgroundColor="{StaticResource Danger}">
                    <Button.ImageSource>
                        <FontImageSource Glyph="{x:Static ui:MaterialIcon.Delete}"
                                         Color="{StaticResource TextIcons}"
                                         FontFamily="{StaticResource FontIconFamily}"
                                         Size="{StaticResource FontIconSize}" />
                    </Button.ImageSource>
                </Button>
            </StackLayout>

            <!--Clear selection button-->
            <Button Grid.Row="1" 
                    Opacity="0" TranslationY="100"
                    HorizontalOptions="Center" VerticalOptions="End"
                    Style="{StaticResource roundButton}"
                    BackgroundColor="Transparent"
                    Command="{Binding ClearSelection}">
                <Button.Behaviors>
                    <behaviors:FadingBehavior IsActive="{Binding HasMinuteSelected}">
                        <x:Arguments>
                            <x:Double>1</x:Double>
                        </x:Arguments>
                    </behaviors:FadingBehavior>
                    <behaviors:MovingBehavior IsActive="{Binding HasMinuteSelected}">
                        <x:Arguments>
                            <x:Double>0</x:Double>
                            <x:Double>100</x:Double>
                        </x:Arguments>
                    </behaviors:MovingBehavior>
                </Button.Behaviors>

                <Button.ImageSource>
                    <FontImageSource Glyph="{x:Static ui:MaterialIcon.Clear}"
                                         Color="{StaticResource Danger}"
                                         FontFamily="{StaticResource FontIconFamily}"
                                         Size="32" />
                </Button.ImageSource>
            </Button>

            <!--Right button list-->
            <StackLayout Grid.Row="1"
                         Opacity="0" TranslationX="100" 
                         HorizontalOptions="End" VerticalOptions="End"
                         InputTransparent="True"
                         CascadeInputTransparent="False"
                         Padding="5">
                <StackLayout.Behaviors>
                    <behaviors:FadingBehavior IsActive="{Binding HasMinuteSelected}">
                        <x:Arguments>
                            <x:Double>1</x:Double>
                        </x:Arguments>
                    </behaviors:FadingBehavior>
                    <behaviors:MovingBehavior IsActive="{Binding HasMinuteSelected}">
                        <x:Arguments>
                            <x:Double>100</x:Double>
                            <x:Double>0</x:Double>
                        </x:Arguments>
                    </behaviors:MovingBehavior>
                </StackLayout.Behaviors>

                <Button Style="{StaticResource roundButton}" HorizontalOptions="End" VerticalOptions="EndAndExpand" 
                            BackgroundColor="{StaticResource Premium}"
                            ImageSource="icPDF"
                            Command="{Binding PrintPDF}" />

                <Button Style="{StaticResource roundButton}" HorizontalOptions="End"
                            ImageSource="icWord"
                            Command="{Binding PrintWord}" />

                <Button Style="{StaticResource roundButton}" HorizontalOptions="End"
                            Command="{Binding BindingContext.EditMinute, Source={x:Reference base}}">
                    <Button.ImageSource>
                        <FontImageSource Glyph="{x:Static ui:MaterialIcon.Edit}"
                                             Color="{StaticResource TextIcons}"
                                             FontFamily="{StaticResource FontIconFamily}"
                                             Size="{StaticResource FontIconSize}" />
                    </Button.ImageSource>
                </Button>
            </StackLayout>

            <!--Add button-->
            <Button Grid.Row="1" 
                    Opacity="0" TranslationY="100" 
                    HorizontalOptions="Center" VerticalOptions="End"
                    Style="{StaticResource roundButton}"
                    Command="{Binding CreateMinute}">
                <Button.Behaviors>
                    <behaviors:FadingBehavior IsActive="{Binding IsSelectionEmpty}">
                        <x:Arguments>
                            <x:Double>1</x:Double>
                        </x:Arguments>
                    </behaviors:FadingBehavior>
                    <behaviors:MovingBehavior IsActive="{Binding IsSelectionEmpty}">
                        <x:Arguments>
                            <x:Double>0</x:Double>
                            <x:Double>100</x:Double>
                        </x:Arguments>
                    </behaviors:MovingBehavior>
                </Button.Behaviors>

                <Button.ImageSource>
                    <FontImageSource Glyph="{x:Static ui:MaterialIcon.Add}"
                                     Color="{StaticResource TextIcons}"
                                     FontFamily="{StaticResource FontIconFamily}"
                                     Size="{StaticResource FontIconSize}" />
                </Button.ImageSource>
            </Button>

            <BoxView Grid.Row="2" 
                     BackgroundColor="{StaticResource Primary}" />

            <controls:AdMobView Grid.Row="2"
                                AdUnitId="{x:Static core:AppConsts.AdHome}" />
        </Grid>
    </ContentPage.Content>
</craftz:BasePage>